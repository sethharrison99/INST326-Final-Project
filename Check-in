class Restaurant:
    def rewardPoints(self, order_amount, users_points=None):
        list_of_items = {"Hamburger": 1500,
                         "Hotdog": 3000,
                         "Salad": 1200,
        }

        reward_points = order_amount * 100
        users_points = users_points + reward_points
        if (users_points >= 1500):
            answer = input("You have enough points to redeem for free items would like to redeem your points. (Yes/Not now)")
            if answer == "Yes" or answer == "yes":
                print("Here is a list of items that can be redeemed based on the number of points you have! (You can only redeem one item at a time)")
                count =0
                items = []
                items_displayed=[]
                price_displayed = []
                for i in list_of_items.keys():
                    items+=[i]
                for price in list_of_items.values():
                    if users_points == price or users_points>price:
                        items_displayed.append(items[count])
                        price_displayed.append(price)
                        print(f"Item: {items[count]}; Price {price}")
                        count = count+1
                item_to_redeem = input("Which item would you like to redeem? (To cancel, type 'Changed my mind'")
                if item_to_redeem == "Changed my mind":
                    return
                for item in items_displayed:
                    if item_to_redeem == item:
                        index = items_displayed.index(item)
                        users_points = users_points - price_displayed[index]
                        return users_points
            else:
                return

    def display_menu():
        menu = {
        "Hot Dog": 3.75,
        "Hamburger": 4.99,
        "Salad": 6.50,
            
        }
    
        for item, price in menu.items():
            if item == "Hamburger":
                choice = input(f"Would you like to add cheese to your {item}? (yes/no: ").strip().lower()
                if choice == "yes":
                    price += 0.99
                
            print(f"{item}: ${price:.2f}")
        
        return menu


if __name__ == "__main__":
    r = Restaurant()
    print(r.rewardPoints(35, 8430))

def placeOrder(customer, order, payment, restaurant):
    try:
        # Validate inputs
        if not all(isinstance(obj, (Customer, Order, Payment, Restaurant)) for obj in (customer, order, payment, restaurant)):
            raise ValueError("Invalid input types")

        # Process the order
        print(f"Processing order for {customer.name} at {restaurant.name}")

        # Check inventory
        for item in order.items:
            if item not in restaurant.inventory or restaurant.inventory[item] == 0:
                raise ValueError(f"{item} is not available in {restaurant.name}'s menu or is out of stock")

        # Process payment
        print(f"Processing payment of {payment.amount} {payment.method}")

        # Update inventory
        for item in order.items:
            restaurant.inventory[item] -= 1

        # Send order confirmation
        print(f"Order confirmed for {customer.name}. Thank you!")

        # Notify the customer (in a real application, this could involve sending an email or SMS)
        print(f"Notifying {customer.name} about the order confirmation")

    except ValueError as ve:
        print(f"Order failed: {str(ve)}")

